openapi: 3.0.3
info:
  title: LeafLens API
  description: |
    AI-powered plant health companion API for diagnosing diseases, nutrient deficiencies, and pests.
    
    ## Features
    - On-device and cloud-based plant disease diagnosis
    - Symptom-based analysis and recommendations
    - Regional outbreak mapping and reporting
    - Plugin system for crop-specific care
    - Treatment playbooks and expert guidance
    
    ## Privacy
    - Offline-first design with optional cloud features
    - No personal data collection by default
    - Opt-in telemetry and cloud synchronization
    - GDPR and privacy-compliant
    
  version: 1.0.0
  contact:
    name: LeafLens Team
    url: https://github.com/makalin/leaflens
    email: support@leaflens.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.leaflens.com/v1
    description: Production server
  - url: https://staging-api.leaflens.com/v1
    description: Staging server
  - url: http://localhost:3000/v1
    description: Development server

paths:
  /health:
    get:
      summary: Health Check
      description: Check the health status of the API and its dependencies
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /diagnose:
    post:
      summary: Diagnose Plant Health
      description: Analyze a plant image to identify diseases, pests, and nutrient deficiencies
      operationId: diagnosePlant
      tags:
        - Diagnosis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
            examples:
              tomato_diagnosis:
                summary: Tomato Plant Diagnosis
                value:
                  image_base64: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
                  crop: "tomato"
                  geo:
                    lat: 40.7128
                    lon: -74.0060
                  metadata:
                    device: "iPhone 13"
                    timestamp: "2024-01-15T10:30:00Z"
      responses:
        '200':
          description: Diagnosis completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /symptoms:
    post:
      summary: Analyze Symptoms
      description: Analyze plant symptoms to identify possible causes and treatments
      operationId: analyzeSymptoms
      tags:
        - Symptoms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomsRequest'
            examples:
              tomato_symptoms:
                summary: Tomato Symptoms Analysis
                value:
                  crop: "tomato"
                  symptoms: ["yellowing leaves", "brown spots", "wilting"]
                  additional_info: "Leaves are turning yellow from the bottom up"
      responses:
        '200':
          description: Symptoms analyzed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomsResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /playbooks/{code}:
    get:
      summary: Get Treatment Playbook
      description: Retrieve detailed treatment instructions for a specific condition
      operationId: getPlaybook
      tags:
        - Playbooks
      parameters:
        - name: code
          in: path
          required: true
          description: Playbook code identifier
          schema:
            type: string
          examples:
            bacterial_spot:
              value: "bacterial_spot"
            early_blight:
              value: "early_blight"
      responses:
        '200':
          description: Playbook retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookResponse'
        '404':
          description: Playbook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /outbreaks:
    get:
      summary: Get Regional Outbreaks
      description: Retrieve information about plant health outbreaks in a specific region
      operationId: getOutbreaks
      tags:
        - Outbreaks
      parameters:
        - name: lat_min
          in: query
          description: Minimum latitude
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
        - name: lat_max
          in: query
          description: Maximum latitude
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
        - name: lon_min
          in: query
          description: Minimum longitude
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
        - name: lon_max
          in: query
          description: Maximum longitude
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
        - name: crop_type
          in: query
          description: Filter by crop type
          schema:
            type: string
        - name: disease
          in: query
          description: Filter by disease
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Outbreaks retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutbreaksResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Report Outbreak
      description: Report a new plant health outbreak
      operationId: reportOutbreak
      tags:
        - Outbreaks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutbreakReportRequest'
      responses:
        '201':
          description: Outbreak reported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutbreakReportResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /plugins:
    get:
      summary: List Available Plugins
      description: Retrieve list of available plugins for crop-specific care
      operationId: listPlugins
      tags:
        - Plugins
      parameters:
        - name: crop_type
          in: query
          description: Filter by crop type
          schema:
            type: string
        - name: category
          in: query
          description: Filter by plugin category
          schema:
            type: string
        - name: active_only
          in: query
          description: Show only active plugins
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Plugins retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsResponse'

  /plugins/{id}:
    get:
      summary: Get Plugin Details
      description: Retrieve detailed information about a specific plugin
      operationId: getPlugin
      tags:
        - Plugins
      parameters:
        - name: id
          in: path
          required: true
          description: Plugin identifier
          schema:
            type: string
      responses:
        '200':
          description: Plugin details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
        '404':
          description: Plugin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    DiagnosisRequest:
      type: object
      required:
        - image_base64
      properties:
        image_base64:
          type: string
          format: base64
          description: Base64 encoded plant image
          maxLength: 10485760  # 10MB
        crop:
          type: string
          description: Plant crop type
          enum: [tomato, pepper, cucumber, lettuce, spinach, carrot, onion, garlic, potato, other]
        geo:
          $ref: '#/components/schemas/GeoLocation'
        metadata:
          type: object
          description: Additional metadata about the diagnosis request
          additionalProperties: true

    GeoLocation:
      type: object
      required:
        - lat
        - lon
      properties:
        lat:
          type: number
          format: float
          minimum: -90
          maximum: 90
          description: Latitude coordinate
        lon:
          type: number
          format: float
          minimum: -180
          maximum: 180
          description: Longitude coordinate

    DiagnosisResponse:
      type: object
      required:
        - id
        - predictions
        - confidence
        - timestamp
      properties:
        id:
          type: string
          format: uuid
          description: Unique diagnosis identifier
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/Prediction'
          description: List of disease/pest predictions
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall confidence score
        crop_type:
          type: string
          description: Detected or specified crop type
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
          description: Treatment recommendations
        timestamp:
          type: string
          format: date-time
          description: Diagnosis timestamp

    Prediction:
      type: object
      required:
        - label
        - confidence
        - category
      properties:
        label:
          type: string
          description: Disease/pest name
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Prediction confidence
        category:
          type: string
          enum: [Disease, Pest, Deficiency, Environmental, Healthy]
          description: Prediction category
        metadata:
          type: object
          description: Additional prediction metadata
          additionalProperties: true

    Recommendation:
      type: object
      required:
        - title
        - description
        - priority
        - steps
      properties:
        title:
          type: string
          description: Recommendation title
        description:
          type: string
          description: Detailed description
        priority:
          $ref: '#/components/schemas/Priority'
        steps:
          type: array
          items:
            type: string
          description: Step-by-step instructions
        safety_notes:
          type: string
          description: Safety considerations
        organic_options:
          type: array
          items:
            type: string
          description: Organic treatment alternatives

    Priority:
      type: string
      enum: [Low, Medium, High, Critical]
      description: Treatment priority level

    SymptomsRequest:
      type: object
      required:
        - crop
        - symptoms
      properties:
        crop:
          type: string
          description: Plant crop type
        symptoms:
          type: array
          items:
            type: string
          description: List of observed symptoms
        geo:
          $ref: '#/components/schemas/GeoLocation'
        additional_info:
          type: string
          description: Additional symptom details

    SymptomsResponse:
      type: object
      required:
        - possible_causes
        - recommendations
        - confidence
      properties:
        possible_causes:
          type: array
          items:
            $ref: '#/components/schemas/PossibleCause'
          description: List of possible causes
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
          description: Treatment recommendations
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Analysis confidence

    PossibleCause:
      type: object
      required:
        - name
        - confidence
        - category
        - description
        - symptoms
      properties:
        name:
          type: string
          description: Cause name
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Cause confidence
        category:
          type: string
          enum: [Disease, Pest, Deficiency, Environmental, Other]
          description: Cause category
        description:
          type: string
          description: Cause description
        symptoms:
          type: array
          items:
            type: string
          description: Associated symptoms

    PlaybookResponse:
      type: object
      required:
        - code
        - title
        - description
        - steps
        - last_updated
      properties:
        code:
          type: string
          description: Playbook code
        title:
          type: string
          description: Playbook title
        description:
          type: string
          description: Playbook description
        steps:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookStep'
          description: Treatment steps
        safety_notes:
          type: array
          items:
            type: string
          description: Safety considerations
        organic_alternatives:
          type: array
          items:
            type: string
          description: Organic treatment options
        prevention_tips:
          type: array
          items:
            type: string
          description: Prevention recommendations
        last_updated:
          type: string
          format: date-time
          description: Last update timestamp

    PlaybookStep:
      type: object
      required:
        - step_number
        - title
        - description
      properties:
        step_number:
          type: integer
          description: Step sequence number
        title:
          type: string
          description: Step title
        description:
          type: string
          description: Step description
        duration:
          type: string
          description: Estimated duration
        materials:
          type: array
          items:
            type: string
          description: Required materials
        warnings:
          type: array
          items:
            type: string
          description: Safety warnings

    OutbreakReportRequest:
      type: object
      required:
        - crop_type
        - disease
        - latitude
        - longitude
        - confidence
      properties:
        crop_type:
          type: string
          description: Affected crop type
        disease:
          type: string
          description: Disease name
        latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          description: Outbreak latitude
        longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          description: Outbreak longitude
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Report confidence
        metadata:
          type: object
          description: Additional outbreak metadata
          additionalProperties: true

    OutbreakReportResponse:
      type: object
      required:
        - id
        - message
        - timestamp
      properties:
        id:
          type: string
          format: uuid
          description: Report identifier
        message:
          type: string
          description: Response message
        timestamp:
          type: string
          format: date-time
          description: Report timestamp

    OutbreaksResponse:
      type: object
      required:
        - outbreaks
        - total_count
        - region
      properties:
        outbreaks:
          type: array
          items:
            $ref: '#/components/schemas/OutbreakData'
          description: List of outbreaks
        total_count:
          type: integer
          description: Total number of outbreaks
        region:
          $ref: '#/components/schemas/Region'

    OutbreakData:
      type: object
      required:
        - id
        - crop_type
        - disease
        - latitude
        - longitude
        - confidence
        - severity
        - reported_at
      properties:
        id:
          type: string
          format: uuid
          description: Outbreak identifier
        crop_type:
          type: string
          description: Affected crop type
        disease:
          type: string
          description: Disease name
        latitude:
          type: number
          format: float
          description: Outbreak latitude
        longitude:
          type: number
          format: float
          description: Outbreak longitude
        confidence:
          type: number
          format: float
          description: Outbreak confidence
        severity:
          $ref: '#/components/schemas/Severity'
        reported_at:
          type: string
          format: date-time
          description: Report timestamp

    Severity:
      type: string
      enum: [Low, Medium, High, Critical]
      description: Outbreak severity level

    Region:
      type: object
      required:
        - min_lat
        - max_lat
        - min_lon
        - max_lon
      properties:
        min_lat:
          type: number
          format: float
          description: Minimum latitude
        max_lat:
          type: number
          format: float
          description: Maximum latitude
        min_lon:
          type: number
          format: float
          description: Minimum longitude
        max_lon:
          type: number
          format: float
          description: Maximum longitude

    PluginsResponse:
      type: object
      required:
        - plugins
        - total_count
      properties:
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/PluginResponse'
          description: List of plugins
        total_count:
          type: integer
          description: Total number of plugins

    PluginResponse:
      type: object
      required:
        - id
        - name
        - version
        - description
        - crop_types
        - is_active
        - features
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Plugin identifier
        name:
          type: string
          description: Plugin name
        version:
          type: string
          description: Plugin version
        description:
          type: string
          description: Plugin description
        crop_types:
          type: array
          items:
            type: string
          description: Supported crop types
        is_active:
          type: boolean
          description: Whether plugin is active
        features:
          type: array
          items:
            type: string
          description: Plugin features
        download_url:
          type: string
          format: uri
          description: Plugin download URL
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    HealthResponse:
      type: object
      required:
        - status
        - version
        - timestamp
        - services
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall service status
        version:
          type: string
          description: API version
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        services:
          $ref: '#/components/schemas/ServiceStatus'

    ServiceStatus:
      type: object
      required:
        - database
        - qdrant
        - ml_models
      properties:
        database:
          type: string
          enum: [healthy, unhealthy]
          description: Database status
        qdrant:
          type: string
          enum: [healthy, unhealthy]
          description: Qdrant vector database status
        ml_models:
          type: string
          enum: [healthy, unhealthy]
          description: ML models status

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - code
        - timestamp
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

tags:
  - name: System
    description: System health and status endpoints
  - name: Diagnosis
    description: Plant health diagnosis endpoints
  - name: Symptoms
    description: Symptom analysis endpoints
  - name: Playbooks
    description: Treatment playbook endpoints
  - name: Outbreaks
    description: Regional outbreak endpoints
  - name: Plugins
    description: Plugin management endpoints